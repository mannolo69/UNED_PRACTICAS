%!PS-PDF-3.0
%Informática Gráfica - Práctica 2
%MANUEL DIAZ CASTRO

%1. EL PROBLEMA DEL DIBUJO DE LAS RECTAS FINITAS
% La practica consiste en terminar el procedimiento y probarlo con rectas

/inchesWide 8.5 def % Letter ancho
/inchesHigh 11 def  %Letter alto
/ppi 72 def % adobe points poe inch(pulgada)
/pointsWide inchesWide ppi mul def %ancho
/pointsHigh inchesHigh ppi mul def %alto
/escala_cm 1 2.54 div 72 mul def
<<
  /PageSize [pointsWide pointsHigh]
>> setpagedevice %parametros de la pagina

% Encontrar los límites dentro de la página
% [A B C] en la pila, para A B C segment-page es un procedimiento
%que toma dos parametros y crea dos puntos para dejarlos en la pila
/segment-page {
    1 dict begin % crear diccionario local
    aload pop %volcar el array en la pila
    /C exch def %sacar C
    /B exch def %sacar B
    /A exch def %sacar A

    A abs B abs le { % fundamentalmente horizontal |A| <= |B|
        /xleft 0 def
        /xright 612 def
        /yleft C A xleft mul add B div neg def % y = -(C + Ax) / B
        /yright C A xright mul add B div neg def
        [xleft yleft] % P a la pila
        [xright yright] % Q a la pila
    }{ % fundamentalmente vertical |A| > |B|
      %simplemente intercambiar y por x
        /yleft 0 def
        /yright pointsHigh def
        /xleft C B yleft mul add A div neg def % y = -(C + Bx) / A
        /xright C B yright mul add A div neg def
        [xleft yleft] % P a la pila
        [xright yright] % Q a la pila
    } ifelse
    end
} def

% Pintar las lineas
% [A B C] on stack
/mkline {
    1 dict begin
    aload pop
    /C exch def
    /B exch def
    /A exch def
    /T % T = page to user matrix
    matrix defaultmatrix
    matrix currentmatrix
    matrix invertmatrix
    matrix concatmatrix
    def
    % 1) encontrar la ecuacíon de la linea en coordenadas de Page(pagina)
    [
    A T 0 get mul
    B T 1 get mul add
    A T 2 get mul
    B T 3 get mul add
    T 4 get A mul
    T 5 get B mul add
    C add
    ]
    % aplicar funcion segment-page para encontrar P, Q, puntos
    %que contengan el segmento que queremos dibujar, en coordenadas Page
    segment-page
    % transformamos estos puntos de vuelta a coordenadas de usuario
    aload pop T transform moveto
    aload pop T transform lineto
    end
} def

%Defino las variables de las rectas que pide en el problema
%recta x -2y -250 = 0 en negro
/r1 [1 -2 -250] def % 1
/black [0 0 0] def
%a) x + y − 10 = 0 en rojo
/r2 [1 1 -10] def % a
/r2Color [1 0 0] def % rojo
%b) −5x + 2y = 10 en verde
/r3 [-5 2 -10] def % despejar C
/r3Color [0 1 0] def % verde
%c) x = y en azul
/r4 [1 -1 0] def % despejar B
/r4Color [0 0 1] def % azul
%d) y = - 1\2x -1 en naranja
/r5 [0.5 1 1] def % despejar A y C
/r5Color [1 0.5 0] def % naranja
%e) x = −1 en otro color distinto a los anteriores
/r6 [1 0 1] def % despejar C
/r6Color [1 0 1] def % magenta
%f)f) Ejes de coordenadas en color negro
/xAxis [0 1 0] def
/yAxis [1 0 0] def
%===PROBLEMAS====
%Trabajando en el sistema de coordenadas por defecto de PostScript
%dibuja la recta
%x − 2y − 250 = 0
r1 mkline
black aload pop setrgbcolor
stroke

%Ahora cambia la escala para trabajar en cm. Haz una traslación del origen a (5, 10).
%Dibuja a continuación las siguientes rectas:
%a) x + y − 10 = 0 en rojo
%b) −5x + 2y = 10 en verde
%c) x = y en azul
%d) y = -1\2x -1 en naranja
%e) x = -1 en otro color distinto a los anteriores
%f) Ejes de coordenadas en color negro

escala_cm dup scale
1 escala_cm div setlinewidth
5 10 translate

r2 mkline
r2Color aload pop setrgbcolor
stroke
r3 mkline
r3Color aload pop setrgbcolor
stroke
r4 mkline
r4Color aload pop setrgbcolor
stroke
r5 mkline
r5Color aload pop setrgbcolor
stroke
r6 mkline
r6Color aload pop setrgbcolor
stroke
xAxis mkline
black aload pop setrgbcolor
stroke
yAxis mkline
black aload pop setrgbcolor
stroke

/Arial findfont
0.5 scalefont setfont
black aload pop setrgbcolor
10 6 moveto( 7x - 14y - 500 = 0) show
stroke
r2Color aload pop setrgbcolor
10 5 moveto(a\) x + y - 10 = 0) show
r3Color aload pop setrgbcolor
10 4 moveto(b\) -5x + 2y = 10) show
0 0 1 setrgbcolor
10 3 moveto(c\) x = y) show
1 0.5 0 setrgbcolor
10 2 moveto(d\) y = -1/2x -1) show
1 0 1 setrgbcolor
10 1 moveto(e\) x = -1) show
0 0 0 setrgbcolor
1 0 moveto(Ejes de coordenadas) show
stroke
showpage
